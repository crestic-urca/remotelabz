stages:
  - build
  - test
  - deploy

variables:
  REGISTRY_URL: registry.remotelabz.com/$CI_PROJECT_PATH/
  MYSQL_DATABASE: symfony
  MYSQL_RANDOM_ROOT_PASSWORD: "yes"
  MYSQL_USER: symfony
  MYSQL_PASSWORD: $MYSQL_PASSWORD

before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

Docker:
  stage: build
  image: tiangolo/docker-with-compose
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    # When using dind, it's wise to use the overlayfs driver for
    # improved performance.
    DOCKER_DRIVER: overlay2
  script:
    - alias 'dockerize=git whatchanged HEAD^! | grep Dockerfile >/dev/null'
    - apk add --no-cache git
    - dockerize || (echo "No need to build new docker image" && exit 0)
    - dockerize && docker-compose pull --ignore-pull-failures
    - dockerize && docker-compose build
    - dockerize && docker-compose push
    - echo "Build done"
  tags:
    - build

PHPUnit:
  stage: test
  image: tiangolo/docker-with-compose
  variables:
    CURRENT_UID: 'root:root'
  services: 
    - docker:dind
  script:
    - cp -rf .env.dist .env
    - echo MYSQL_PASSWORD=$MYSQL_PASSWORD >> .env
    - docker-compose pull
    - docker-compose up --no-start
    - docker-compose start apache mysql
    - docker-compose run -T composer install --no-scripts
    - docker-compose run -T yarn install
    - docker-compose run -T yarn encore dev 
    - docker-compose run -T console doctrine:migrations:migrate -n
    - docker-compose run -T console doctrine:fixtures:load -n
    - docker-compose run -T console assets:install --symlink public --relative
    - docker-compose run -T console phpunit --configuration /app/phpunit.xml.dist
  dependencies:
    - Docker
  tags:
    - test

# TODO stage with apache to upload on public server
Deploy to review:
  stage: deploy
  except: 
    - master
  script:
    - export CURRENT_UID=$(id -u):$(id -g)
    - cp -rf .env.dist .env
    - echo MYSQL_PASSWORD=$MYSQL_PASSWORD >> .env
    - docker-compose stop
    - docker-compose pull
    - docker-compose up --no-start
    - docker-compose start apache mysql
    - docker-compose run -T composer install --no-scripts
    - docker-compose run -T yarn install
    - docker-compose run -T yarn encore dev
    - docker-compose run -T console doctrine:migrations:migrate -n
    - docker-compose run -T console doctrine:fixtures:load -n
    - docker-compose run -T console assets:install --symlink public --relative
  environment:
    name: Review
    url: http://10.22.9.136/
    on_stop: Stop review
  dependencies:
    - PHPUnit
  tags:
    - deploy

Stop review:
  stage: deploy
  except: 
    - master
  variables:
    GIT_STRATEGY: none
  script:
    - docker-compose stop
  when: manual
  environment:
    name: Review
    action: stop
  tags:
    - deploy

Deploy to staging:
  stage: deploy
  only: 
    - master
  script:
    - export CURRENT_UID=$(id -u):$(id -g)
    - cp -rf .env.dist .env
    - echo MYSQL_PASSWORD=$MYSQL_PASSWORD >> .env
    - docker-compose stop
    - docker-compose pull
    - docker-compose up --no-start
    - docker-compose start apache mysql
    - docker-compose run -T composer install --no-scripts
    - docker-compose run -T yarn install
    - docker-compose run -T yarn encore dev
#    - docker-compose run -T console doctrine:migrations:migrate -n
#    - docker-compose run -T console doctrine:fixtures:load -n
#    - docker-compose run -T console assets:install --symlink public --relative
  environment:
    name: Staging
    url: http://staging.remotelabz.com/
    on_stop: Stop staging
  tags:
    - staging

Stop staging:
  stage: deploy
  only:
    - master
  variables:
    GIT_STRATEGY: none
  script:
    - docker-compose stop
  when: manual
  environment:
    name: Staging
    action: stop
  tags:
    - staging
