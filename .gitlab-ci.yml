stages:
  - build
  - test
  - deploy

variables:
  CONTAINER_IMAGE: registry.remotelabz.com/$CI_PROJECT_PATH
  MYSQL_DATABASE: symfony
  MYSQL_RANDOM_ROOT_PASSWORD: "yes"
  MYSQL_USER: symfony
  MYSQL_PASSWORD: $MYSQL_PASSWORD
  GIT_SSL_NO_VERIFY: "1"

before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

build:app:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker pull $CONTAINER_IMAGE:latest || true
    - docker build -f ./docker/Dockerfile --cache-from $CONTAINER_IMAGE --tag $CONTAINER_IMAGE:$CI_COMMIT_SHA --tag $CONTAINER_IMAGE:latest .
    - docker push $CONTAINER_IMAGE:$CI_COMMIT_SHA
    - docker push $CONTAINER_IMAGE:latest
  tags:
    - build

# TODO edit test mode
test:phpunit:
  stage: test
  image: docker
  services:
    - mysql:5.7
    - docker:dind
  script:
    - apk add --no-cache py-pip
    - pip install docker-compose
    - cp -rf .env.dist .env
    - "printenv >> .env"
    - docker-compose up --build -d
    - bin/phpunit --configuration phpunit.xml.dist --colors=never
  only:
    - master
  tags:
    - test

# TODO stage with apache to upload on public server
deploy:staging:
  stage: deploy
  script:
    - cp -rf .env.dist .env
    - "printenv >> .env"
    - docker-compose stop
    - docker pull $CONTAINER_IMAGE:latest || true
    - docker-compose up -d
  environment:
    name: staging
    url: http://10.22.9.136/
  dependencies:
    - test:phpunit
  tags:
    - deploy
