stages:
  - build
  - test
  - deploy

variables:
  REGISTRY_URL: registry.remotelabz.com/$CI_PROJECT_PATH/
  MYSQL_DATABASE: symfony
  MYSQL_RANDOM_ROOT_PASSWORD: "yes"
  MYSQL_USER: symfony
  MYSQL_PASSWORD: $MYSQL_PASSWORD

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

Docker:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    # When using dind, it's wise to use the overlayfs driver for
    # improved performance.
    DOCKER_DRIVER: overlay2
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
  tags:
    - build

PHPUnit:
  stage: test
  image: docker:stable
  services: 
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    # When using dind, it's wise to use the overlayfs driver for
    # improved performance.
    DOCKER_DRIVER: overlay2
  script:
    - cp -rf .env.dist .env
    - echo MYSQL_PASSWORD=$MYSQL_PASSWORD >> .env
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker run -d --rm --name mysql -p 3306:3306 -e MYSQL_RANDOM_ROOT_PASSWORD=1 -e MYSQL_DATABASE=$MYSQL_DATABASE -e MYSQL_USER=$MYSQL_USER -e MYSQL_PASSWORD=$MYSQL_PASSWORD mysql
    - docker run -d --rm -p 8000:8000 -p 8888:8888 -v $(pwd)/.env:/var/www/html/remotelabz/.env --name remotelabz --link mysql $CI_REGISTRY_IMAGE:latest
    - docker exec remotelabz php bin/console doctrine:migrations:migrate -n
    - docker exec remotelabz php bin/console doctrine:fixtures:load -n
    - docker exec remotelabz php bin/phpunit
  dependencies:
    - Docker
  tags:
    - test

# TODO stage with apache to upload on public server
Deploy to review:
  stage: deploy
  except: 
    - master
  script:
    - cp -rf .env.dist .env
    - echo MYSQL_PASSWORD=$MYSQL_PASSWORD >> .env
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker run -d --rm --name mysql -p 3306:3306 -e MYSQL_RANDOM_ROOT_PASSWORD=1 -e MYSQL_DATABASE=$MYSQL_DATABASE -e MYSQL_USER=$MYSQL_USER -e MYSQL_PASSWORD=$MYSQL_PASSWORD mysql
    - docker run -d --rm -p 8000:8000 -p 8888:8888 -v $(pwd)/.env:/var/www/html/remotelabz/.env --name remotelabz --link mysql $CI_REGISTRY_IMAGE:latest
    - docker exec remotelabz php bin/console doctrine:migrations:migrate -n
    - docker exec remotelabz php bin/console doctrine:fixtures:load -n
  environment:
    name: Review
    url: http://10.22.9.136/
    on_stop: Stop review
  dependencies:
    - PHPUnit
  tags:
    - deploy

Stop review:
  stage: deploy
  except: 
    - master
  variables:
    GIT_STRATEGY: none
  script:
    - docker stop remotelabz
    - docker stop mysql
  when: manual
  environment:
    name: Review
    action: stop
  tags:
    - deploy

Deploy to staging:
  stage: deploy
  only: 
    - master
  script:
    - cp -rf .env.dist .env
    - echo MYSQL_PASSWORD=$MYSQL_PASSWORD >> .env
    - docker-compose stop
    - docker-compose pull
    - docker-compose up --no-start
    - docker-compose start apache mysql
    - docker-compose run -T composer install --no-progress --no-scripts --no-suggest
    - docker-compose run -T yarn install
    - docker-compose run -T yarn encore dev
    - docker-compose run -T console doctrine:migrations:migrate -n
    - docker-compose run -T console doctrine:fixtures:load -n
    - docker-compose run -T console assets:install --symlink public --relative
  environment:
    name: Staging
    url: http://staging.remotelabz.com/
    on_stop: Stop staging
  tags:
    - staging

Stop staging:
  stage: deploy
  only:
    - master
  variables:
    GIT_STRATEGY: none
  script:
    - docker-compose stop
  when: manual
  environment:
    name: Staging
    action: stop
  tags:
    - staging