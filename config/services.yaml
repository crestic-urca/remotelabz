# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    launch_scripts_directory: '%kernel.project_dir%/public/uploads/launch_scripts'
    profile_picture_directory: '%kernel.project_dir%/public/uploads/user/avatar'
    group_image_directory: '%kernel.project_dir%/public/uploads/group/avatar'
    image_directory: '%kernel.project_dir%/public/uploads/images'
    shibboleth_idp_url: '/Shibboleth.sso'
    shibboleth_remote_user_var: 'eppn'
    api_key_cookie_name: 'bearer'

    app.enable_jitsi_call: '%env(resolve:ENABLE_JITSI_CALL)%'
    app.jitsi_call_url: '%env(resolve:JITSI_CALL_URL)%'
    app.jitsi_call_secret: '%env(resolve:JITSI_CALL_SECRET)%'
    
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\EventListener\LaunchScriptUploadListener:
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: postLoad }

    App\Service\FileUploader:
        arguments:
            $targetDirectory: '%launch_scripts_directory%'

    App\Service\ImageFileUploader:
        arguments:
            $targetDirectory: '%image_directory%'

    App\Service\GroupPictureFileUploader:
        arguments:
            $targetDirectory: '%group_image_directory%'

    App\Service\ProfilePictureFileUploader:
        arguments:
           - '%profile_picture_directory%'
           - '@security.token_storage'

    App\Security\LoginFormAuthenticator:
        arguments:
            $refreshTokenManager: '@gesdinet.jwtrefreshtoken.refresh_token_manager'

    App\Security\ShibbolethAuthenticator:
        arguments:
            - "@router"
            - "%shibboleth_idp_url%"
            - "%shibboleth_remote_user_var%"

    App\EventSubscriber\RenderExceptionSubscriber:
        arguments:
            $logger: '@logger'

    App\EventListener\InstanceSerializationListener:
        tags:
            - { name: jms_serializer.event_subscriber }
